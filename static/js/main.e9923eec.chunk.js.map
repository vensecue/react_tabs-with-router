{"version":3,"sources":["App.tsx","index.tsx"],"names":["tabs","id","title","content","TabsPage","tabId","useParams","selectedTab","find","tab","className","map","to","App","isTabsPath","useOutlet","end","isActive","classNames","path","element","index","Root","ReactDOM","createRoot","document","getElementById","render"],"mappings":"mPAUMA,EAAc,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG1C,SAASC,IACP,IAAQC,EAAUC,cAAVD,MAEFE,EAAcP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOI,CAAf,IAEjC,OACE,qCACE,oBAAIK,UAAU,QAAd,uBACA,qBAAKA,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAF,GAAG,OACX,oBAEE,UAAQ,MACRC,UAAWD,EAAIR,KAAOI,EAAQ,YAAc,GAH9C,SAKE,cAAC,IAAD,CAAMO,GAAE,gBAAWH,EAAIR,IAAvB,SAA8BQ,EAAIP,SAJ7BO,EAAIR,GAFA,QAYjB,qBAAKS,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAcA,EAAYJ,QAAU,0BAI5C,CAEM,IAAMU,EAAM,WACjB,IAEMC,IAFSC,cAIf,OACE,qCACE,qBAAKL,UAAU,oDAAoD,UAAQ,MAA3E,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEE,GAAG,IACHI,KAAG,EACHN,UAAW,gBAAGO,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CAAE,YAAaD,GAA3D,EAHb,kBAOA,cAAC,IAAD,CACEL,GAAG,QACHF,UAAW,gBAAGO,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CAAE,YAAaD,GAAYH,GAAvE,EAFb,yBAUN,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOS,KAAK,IAAIC,QAAS,oBAAIV,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOS,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUR,GAAG,QAC1C,eAAC,IAAD,CAAOO,KAAK,OAAOC,QAAS,cAAC,IAAD,IAA5B,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAChB,EAAD,MACtB,cAAC,IAAD,CAAOe,KAAK,SAASC,QAAS,cAAChB,EAAD,SAEhC,cAAC,IAAD,CAAOe,KAAK,IAAIC,QAAS,oBAAIV,UAAU,QAAd,uCAMpC,ECnFKY,EAAO,kBACX,cAAC,IAAD,UACE,cAAC,EAAD,KAFS,EAMAC,IAASC,WACpBC,SAASC,eAAe,SAGrBC,OAAO,cAAC,EAAD,I","file":"static/js/main.e9923eec.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport {\n  NavLink, Route, Routes, Link, useParams, Navigate, Outlet, useOutlet,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from './types/Tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nfunction TabsPage() {\n  const { tabId } = useParams();\n\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={tab.id === tabId ? 'is-active' : ''}\n            >\n              <Link to={`/tabs/${tab.id}`}>{tab.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab ? selectedTab.content : 'Please select a tab'}\n      </div>\n    </>\n  );\n}\n\nexport const App = () => {\n  const outlet = useOutlet();\n\n  const isTabsPath = !!outlet;\n\n  return (\n    <>\n      <nav className=\"navbar is-light is-fixed-top is-mobile has-shadow\" data-cy=\"Nav\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              end\n              className={({ isActive }) => classNames('navbar-item', { 'is-active': isActive })}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/tabs\"\n              className={({ isActive }) => classNames('navbar-item', { 'is-active': isActive || isTabsPath })}\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home page</h1>} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"tabs\" element={<Outlet />}>\n              <Route index element={<TabsPage />} />\n              <Route path=\":tabId\" element={<TabsPage />} />\n            </Route>\n            <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './App';\n\nconst Root = () => (\n  <Router>\n    <App />\n  </Router>\n);\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(<Root />);\n"],"sourceRoot":""}